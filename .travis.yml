language: r
os:
- linux
- osx
r:
- oldrel
- release
if: tag IS blank
cache: packages
warnings_are_errors: false
notifications:
  email:
    on_success: change
    on_failure: change
addons:
  apt:
    packages:
    - libgdal-dev
    - libgeos-dev
  homebrew:
    packages:
    - pkg-config
    - gdal
r_packages:
  - drat
before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then R -e 'source("https://install-github.me/r-lib/remotes")'; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then echo 'options(repos = "https://cloud.r-project.org/", install.packages.compile.from.source = "never")' > ~/.Rprofile.site && export R_PROFILE=~/.Rprofile.site; fi

before_script:
  - wget https://github.com/StoXProject/repo/raw/master/scripts/checktag.sh
  - wget https://github.com/StoXProject/repo/raw/master/scripts/deploy.sh
  - bash checktag.sh

after_success:
  # Get Package name and version from DESCRIPTION
  - 'export PKGVER=$(sed -n "s/Version: *\([^ ]*\)/\1/p" DESCRIPTION)'
  - 'export PKGNAME=$(sed -n "s/Package: *\([^ ]*\)/\1/p" DESCRIPTION)'
  - 'export SRC_PKG_FILE=${PKGNAME}_${PKGVER}'
  - "echo $SRC_PKG_FILE"
  # Build binary and remove the source archive
  - "R CMD INSTALL --build ${SRC_PKG_FILE}.tar.gz"
  - "mkdir drat"
  - "cp ${SRC_PKG_FILE}.tar.gz drat/"
  - "rm ${SRC_PKG_FILE}.tar.gz"
  # Look for binary bundle (*.tgz for OSX and *.tar.gz for Linux)
  - "export BINSRC=$(ls $PKGNAME*gz)"
  - "export BINDST=${BINSRC//.tar.gz/-R${TRAVIS_R_VERSION}.tar.gz}"
  - "export BIN_PKG_FILE=${BINDST//.tgz/-R${TRAVIS_R_VERSION}.tgz}"
  - "cp ${BINSRC} ${BIN_PKG_FILE}"
  - "cp ${BINSRC} drat/"
  - "echo Resulting binary: $BIN_PKG_FILE"
  # If you are in linux with R release, instruct to deploy source in drat and also generate docs with pkdown
  - test $TRAVIS_BRANCH == "master"  && test $TRAVIS_PULL_REQUEST == "false" && test $TRAVIS_OS_NAME == "linux" && test $TRAVIS_R_VERSION_STRING == "release" && export DEPLOY_SRC="true" && Rscript -e 'remotes::install_cran("pkgdown")' && Rscript -e 'pkgdown::build_site()'
  # Populate DRAT
  - test $TRAVIS_BRANCH == "master"  && test $TRAVIS_PULL_REQUEST == "false" && export PKG_REPO=$PWD && bash deploy.sh

before_deploy:
  # Set up git user name and tag this commit
  - git config --global user.email "builds@travis-ci.com"
  - git config --global user.name "Travis CI"
  - export TRAVIS_TAG=$PKGNAME-v$PKGVER
  - if git tag $TRAVIS_TAG > /dev/null 2>&1; then echo Successfully tagged; else echo Tag already exists; fi

deploy:
  - provider: releases
    token: $API_KEY
    file: $BIN_PKG_FILE
    skip_cleanup: true
    on:
     branch: master
  - provider: pages
    skip_cleanup: true
    token: $API_KEY
    keep_history: true
    local_dir: ${PKG_REPO}/docs
    on:
     branch: master
     condition: $TRAVIS_OS_NAME = linux && $TRAVIS_R_VERSION_STRING = release
