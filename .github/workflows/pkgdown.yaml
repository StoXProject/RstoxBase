on:
  push:
    branches: master

name: pkgdown

jobs:
  pkgdown:
    # Use macOS here to speed up by binary R package install (and Windows may have more issues, such as Rtools)
    runs-on: macOS-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: release

      - name: Anticipate Bintray shutdown
        if: runner.os == 'macOS'
        run: |
          brew update
        shell: bash 

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Query R package dependencies
        run: |
          install.packages('remotes')
          # dependencies = TRUE installs "Depends", "Imports", "LinkingTo" and "Suggests", and the  "Depends", "Imports" and "LinkingTo" recursively from those dependencies
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install MacOS system dependencies
        # We are on macOS as per the "runs-on":
        #if: runner.os == 'macOS'
        run: |
          # gfortran may not exist in a period after a new R minor release:
          gfortranFile='/usr/local/bin/gfortran'
          if [ -f "$gfortranFile" ] ; then
            rm "$gfortranFile"
          fi
          rm '/usr/local/bin/2to3'
          rm '/usr/local/bin/2to3-3.11'
          rm '/usr/local/bin/idle3.11'
          rm '/usr/local/bin/idle3'
          rm '/usr/local/bin/pydoc3'
          rm '/usr/local/bin/python3'
          rm '/usr/local/bin/python3-config'
          rm '/usr/local/bin/pydoc3.11'
          rm '/usr/local/bin/python3.11'
          rm '/usr/local/bin/python3.11-config'
          export HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=false # This prevents Homebrew from re-installing R, which will lead to .Platform$pkgType = "source".
          brew install gdal udunits
        shell: bash

      - name: Install R package dependencies
        run: |
          # Install the dependencies:
          # dependencies = TRUE installs "Depends", "Imports", "LinkingTo" and "Suggests", and the  "Depends", "Imports" and "LinkingTo" recursively from those dependencies
          remotes::install_deps(dependencies = TRUE, type = "both", repos = 
            c("https://stoxproject.github.io/repo", "https://stoxproject.github.io/testingRepo", "https://cloud.r-project.org")
          )
          
          # Used in "Deploy package" below:
          install.packages("pkgdown", type = "binary")
        shell: Rscript {0}

      - name: Install package
        run: R CMD INSTALL .

      - name: Deploy package
        run: pkgdown::deploy_to_branch(new_process = FALSE)
        shell: Rscript {0}
